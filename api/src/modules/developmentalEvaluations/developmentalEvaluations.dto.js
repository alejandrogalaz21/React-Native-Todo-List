export function single(doc) {
  return {
    active: doc.active,
    id: doc._id,
    infant: doc.infant,
    evaluationType: doc.evaluationType,
    evaluationTotal: doc.evaluationTotal,
    lastStatus: doc.lastStatus,
    evaluationNextNumber: doc.evaluationNextNumber,
    dateOfApplication: doc.dateOfApplication,
    questionnaireApplicator: doc.questionnaireApplicator,
    dateOfResultsCapture: doc.dateOfResultsCapture,
    infantAge: doc.infantAge,
    asq: doc.asq,
    asqQuestionnaireName: doc.asqQuestionnaireName,
    communication: doc.communication,
    thickMotor: doc.thickMotor,
    fineMotor: doc.fineMotor,
    problemSolving: doc.problemSolving,
    socialPerson: doc.socialPerson,
    finalResultAsq: doc.finalResultAsq,
    idi: doc.idi,
    cognitive: doc.cognitive,
    linguistics: doc.linguistics,
    socioemotional: doc.socioemotional,
    adaptive: doc.adaptive,
    physical: doc.physical,
    finalResultIdi: doc.finalResultIdi,
    ifd: doc.ifd,
    attentionHyperactivityImpulsivity: doc.attentionHyperactivityImpulsivity,
    reasoningProcess: doc.reasoningProcess,
    memory: doc.memory,
    executiveFunction: doc.executiveFunction,
    interpersonalSkills: doc.interpersonalSkills,
    emotinalMaturity: doc.emotinalMaturity,
    coordinationOfMotorFunction: doc.coordinationOfMotorFunction,
    communicationIfd: doc.communicationIfd,
    readingAndComprehensionSkills: doc.readingAndComprehensionSkills,
    writingAndSpelling: doc.writingAndSpelling,
    mathematicalOperations: doc.mathematicalOperations,
    finalResultIfd: doc.finalResultIfd,
    mchat: doc.mchat,
    mchatResult: doc.mchatResult,
    esasen: doc.esasen,
    attention: doc.attention,
    internalization: doc.internalization,
    outsourcing: doc.outsourcing,
    mentalHealth: doc.mentalHealth,
    esasenFinalResult: doc.esasenFinalResult,
    sdqCas: doc.sdqCas,
    emotionalProblems: doc.emotionalProblems,
    behaviorProblems: doc.behaviorProblems,
    hyperactivityProblems: doc.hyperactivityProblems,
    peerProblems: doc.peerProblems,
    prosocialConduit: doc.prosocialConduit,
    generalDifficulties: doc.generalDifficulties,
    sdqCasResults: doc.sdqCasResults,
    asqSe: doc.asqSe,
    asqSeResults: doc.asqSeResults,
    otherQuestionnaire: doc.otherQuestionnaire,
    otherQuestionnaireName: doc.otherQuestionnaireName,
    otherResult: doc.otherResult,
    observations: doc.observations,
    evaluationStatus: doc.evaluationStatus,
    nextMonthEvaluation: doc.nextMonthEvaluation,
    createdAt: doc.createdAt,
    updatedAt: doc.updatedAt,
    resultColor: doc.resultColor,
    emotionalMaturity: doc.emotionalMaturity,
    asqSeType: doc.asqSeType,
    asqSeFirstResult: doc.asqSeFirstResult,
    centerId: doc.centerId,
    centerName: doc.centerName
  }
}

export function multiple(docs) {
  return docs.map(doc => single(doc))
}

export function pagination(resource) {
  return {
    docs: resource.docs.map(doc => singlePagination(doc)),
    totalDocs: resource.totalDocs,
    limit: resource.limit,
    totalPages: resource.totalPages,
    page: resource.page,
    pagingCounter: resource.pagingCounter,
    hasPrevPage: resource.hasPrevPage,
    hasNextPage: resource.hasNextPage,
    prevPage: resource.prevPage,
    nextPage: resource.nextPage
  }
}

export function singlePagination(doc) {
  return {
    id: doc._id,
    infant: doc.infant,
    evaluationType: doc.evaluationType,
    evaluationTotal: doc.evaluationTotal,
    lastStatus: doc.lastStatus,
    evaluationNextNumber: doc.evaluationNextNumber,
    dateOfApplication: doc.dateOfApplication,
    questionnaireApplicator: doc.questionnaireApplicator,
    dateOfResultsCapture: doc.dateOfResultsCapture,
    infantAge: doc.infantAge,
    asq: doc.asq,
    asqQuestionnaireName: doc.asqQuestionnaireName,
    communication: doc.communication,
    thickMotor: doc.thickMotor,
    fineMotor: doc.fineMotor,
    problemSolving: doc.problemSolving,
    socialPerson: doc.socialPerson,
    finalResultAsq: doc.finalResultAsq,
    idi: doc.idi,
    cognitive: doc.cognitive,
    linguistics: doc.linguistics,
    socioemotional: doc.socioemotional,
    adaptive: doc.adaptive,
    physical: doc.physical,
    finalResultIdi: doc.finalResultIdi,
    ifd: doc.ifd,
    attentionHyperactivityImpulsivity: doc.attentionHyperactivityImpulsivity,
    reasoningProcess: doc.reasoningProcess,
    memory: doc.memory,
    executiveFunction: doc.executiveFunction,
    interpersonalSkills: doc.interpersonalSkills,
    emotinalMaturity: doc.emotinalMaturity,
    coordinationOfMotorFunction: doc.coordinationOfMotorFunction,
    communicationIfd: doc.communicationIfd,
    readingAndComprehensionSkills: doc.readingAndComprehensionSkills,
    writingAndSpelling: doc.writingAndSpelling,
    mathematicalOperations: doc.mathematicalOperations,
    finalResultIfd: doc.finalResultIfd,
    mchat: doc.mchat,
    mchatResult: doc.mchatResult,
    esasen: doc.esasen,
    attention: doc.attention,
    internalization: doc.internalization,
    outsourcing: doc.outsourcing,
    mentalHealth: doc.mentalHealth,
    esasenFinalResult: doc.esasenFinalResult,
    sdqCas: doc.sdqCas,
    emotionalProblems: doc.emotionalProblems,
    behaviorProblems: doc.behaviorProblems,
    hyperactivityProblems: doc.hyperactivityProblems,
    peerProblems: doc.peerProblems,
    prosocialConduit: doc.prosocialConduit,
    generalDifficulties: doc.generalDifficulties,
    sdqCasResults: doc.sdqCasResults,
    asqSe: doc.asqSe,
    asqSeResults: doc.asqSeResults,
    otherQuestionnaire: doc.otherQuestionnaire,
    otherQuestionnaireName: doc.otherQuestionnaireName,
    otherResult: doc.otherResult,
    observations: doc.observations,
    evaluationStatus: doc.evaluationStatus,
    nextMonthEvaluation: doc.nextMonthEvaluation,
    createdAt: doc.createdAt,
    updatedAt: doc.updatedAt,
    general: doc.general,
    active: doc.active,
    resultColor: doc.resultColor,
    emotionalMaturity: doc.emotionalMaturity,
    asqSeType: doc.asqSeType,
    asqSeFirstResult: doc.asqSeFirstResult,
    centerId: doc.centerId,
    centerName: doc.centerName
  }
}
